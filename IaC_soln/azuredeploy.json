{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
	"parameters": {
		"existingVirtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "Name of the existing VNET"
			}
		},
		"existingSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the existing subnet in the existing VNET you want to use"
			}
		},

		"storageType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"metadata": {
				"description": "Which type of storage you want to use for the OS Disk"
			}
		},
		"vmName": {
			"type": "string",
			"metadata": {
				"description": "Local name for the VM can be whatever you want"
			}
		},
		"vmAdminUserName": {
			"type": "string",
			"metadata": {
				"description": "VM admin user name"
			}
		},
		"vmAdminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "VM admin password. The supplied password must be between 8-123 characters long and must satisfy at least 3 of password complexity requirements from the following: 1) Contains an uppercase character 2) Contains a lowercase character 3) Contains a numeric digit 4) Contains a special character."
			}
		},
		"vmSize": {
			"type": "string",
			"metadata": {
				"description": "Desired Size of the VM. Any valid option accepted but if you choose premium storage type you must choose a DS class VM size."
			},
			"defaultValue": "Standard_D2_v3"
		},
		"vmVisualStudioVersion": {
			"type": "string",
			"defaultValue": "VS-2017-Ent-WS2016",
			"metadata": {
				"description": "Which version of Visual Studio you would like to deploy"
			}
		},
		"VSTSAccount": {
			"type": "string",
			"metadata": {
				"description": "The Visual Studio Team Services account name, that is, the first part of your VSTSAccount.visualstudio.com"
			}
		},
		"PersonalAccessToken": {
			"type": "securestring",
			"metadata": {
				"description": "The personal access token to connect to VSTS"
			}
		},
		"poolName": {
			"type": "string",
			"defaultValue": "Default",
			"metadata": {
				"description": "The Visual Studio Team Services build agent pool for this build agent to join. Use 'Default' if you don't have a separate pool."
			}
		},
		"artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
			},
			"defaultValue": ""
		},
		"virtualNetworkNewOrExisting": {
			"type": "string",
			"defaultValue": "new",
			"metadata": {
				"description": "Determines whether or not a new virtual network should be provisioned."
			}
		},
		"addressPrefixes": {
			"type": "array",
			"defaultValue": [ "10.0.0.0/16" ],
			"metadata": {
				"description": "Address prefix of the virtual network"
			}
		},
		"subnetPrefix": {
			"type": "string",
			"defaultValue": "10.0.0.0/24",
			"metadata": {
				"description": "Subnet prefix of the virtual network"
			}
		},
		"existingVirtualNetworkResourceGroupName": {
			"type": "string",
			"defaultValue": "[resourceGroup().name]",
			"metadata": {
				"description": "Name of the resource group for the existing virtual network"
			}
		},
		"publicIpNewOrExisting": {
			"type": "string",
			"defaultValue": "new",
			"metadata": {
				"description": "Determines whether or not a new public ip should be provisioned."
			}
		},
		"enableAutologon": {
			"type": "bool",
			"defaultValue": false,
			"metadata": {
				"description": "Enable autologon to run the build agent in interactive mode that can sustain machine reboots.<br>Set this to true if the agents will be used to run UI tests."
			}
		}
	},
	"variables": {
		"vmImagePublisher": "MicrosoftVisualStudio",
		"vmImageOffer": "VisualStudio",
		"vmOSDiskName":  "[concat(parameters('vmName'),'_OSDisk')]",
		"vnetID": "[resourceId(parameters('existingVirtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('existingSubnetName')) ]",
		"vmNicName": "[concat(parameters('vmName'), '-nic')]", 
		"extensionsApi": "2015-06-15",
		"publicIPAddressName": "[concat(parameters('vmName'),'pip')]"
	},
	"resources": 
	[
		{
			"condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2017-09-01",
			"name": "[parameters('existingvirtualNetworkName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": "[parameters('addressPrefixes')]"
				},
				"subnets": [
					{
						"name": "[parameters('existingSubnetName')]",
						"properties": {
							"addressPrefix": "[parameters('subnetPrefix')]"
						}
					}
				]
			}
		},
		{
			"condition": "[equals(parameters('publicIpNewOrExisting'), 'new')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2017-09-01",
			"name": "[variables('publicIPAddressName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[parameters('vmName')]"
				}
			}
		},
		{
			"name": "[variables('vmNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2017-03-01",
			"dependsOn": [
				"[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/', parameters('existingvirtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"name": "[parameters('vmName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"location": "[resourceGroup().location]",
			"apiVersion": "2017-03-30",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('vmNicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[parameters('vmName')]",
					"adminUsername": "[parameters('vmAdminUserName')]",
					"adminPassword": "[parameters('vmAdminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('vmImagePublisher')]",
						"offer": "[variables('vmImageOffer')]",
						"sku": "[parameters('vmVisualStudioVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"caching": "ReadWrite",
						"createOption": "FromImage",
						"managedDisk": {
							"storageAccountType": "[parameters('storageType')]"
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2018-10-01",
			"name": "[concat(parameters('vmName'), '/vstsagents')]",
			"location": "australiaeast",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
			],
			"properties": {
				"autoUpgradeMinorVersion": false,
				"settings": {
					"fileUris": [
						"https://vstsscriptstore.blob.core.windows.net/vstsscript/InstallVSTSAgent.ps1"
					],
					"commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File InstallVSTSAgent.ps1 -VSTSAccount ', parameters('vstsAccount'), ' -PersonalAccessToken ', parameters('personalAccessToken'), ' -AgentName ', parameters('vmName'), ' -PoolName ', parameters('poolName'),' -runAsAutoLogon ', parameters('enableAutologon') , ' -vmAdminUserName ', parameters('vmAdminUserName'), ' -vmAdminPassword ', parameters('vmAdminPassword'))]"
				},
				"publisher": "Microsoft.Compute",
				"type": "CustomScriptExtension",
				"typeHandlerVersion": "1.8",
				"protectedSettings": {}
			}
		}
	],
	"outputs": {
			}
}